name: Update Latest Database

on:
  workflow_dispatch:
    inputs:
      release_version:
        type: string
        description: Which release version to update the database for (type v1.0.6 for example)
        default: "latest"

jobs:
  Update-Database:
    runs-on: ubuntu-latest
    steps:
      - name: Authorize Mikroe Actions App
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.MIKROE_ACTIONS }}
          private-key: ${{ secrets.MIKROE_ACTIONS_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements/shared.txt
          pip install -r scripts/requirements/databases.txt
          sudo apt-get install p7zip-full

      - name: Upload new database asset
        run: |
          python -u scripts/reupload_databases.py ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} ${{ secrets.PROG_DEBUG_CODEGRIP }} ${{ secrets.PROG_DEBUG_MIKROPROG }} ${{ github.event.inputs.release_version }} "latest"

      - name: Add GitHub Actions credentials
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Commit and Push Changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Updating with new CHANGELOG.md";
            git add necto_db.db
            git commit -m "Updated necto database with latest merged release."
            git push
          else
            echo "No changes made to necto_db.db";
          fi

      - name: Run Index Script
        env:
          ES_HOST: ${{ secrets.ES_HOST }}
          ES_USER: ${{ secrets.ES_USER }}
          ES_PASSWORD: ${{ secrets.ES_PASSWORD }}
        run: |
          echo "Indexing database to TEST."
          python -u scripts/index.py ${{ github.repository }} ${{ secrets.GITHUB_TOKEN }} ${{ secrets.ES_INDEX_TEST }} False ${{ github.event.inputs.release_version }} True
          echo "Indexing database to LIVE."
          python -u scripts/index.py ${{ github.repository }} ${{ secrets.GITHUB_TOKEN }} ${{ secrets.ES_INDEX_LIVE }} False ${{ github.event.inputs.release_version }} True
